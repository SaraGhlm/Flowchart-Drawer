package Form;

import flowcharter.DrawPanel;
import flowcharter.Point;
import flowcharter.Shape;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sara
 */
public class Connection extends javax.swing.JDialog {

    /**
     * Creates new form Connection
     *
     * @param parent
     * @param modal
     */
    public Connection(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        drawTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableConnectTo = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connection Edit");

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("shapes which this shape is connected to them");

        jTableConnectTo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shape", "Point's x", "Point's y"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConnectTo.setColumnSelectionAllowed(true);
        jTableConnectTo.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTableConnectTo);
        jTableConnectTo.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableConnectTo.getColumnModel().getColumnCount() > 0) {
            jTableConnectTo.getColumnModel().getColumn(0).setResizable(false);
            jTableConnectTo.getColumnModel().getColumn(1).setResizable(false);
            jTableConnectTo.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jButtonDelete)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButtonDelete)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Point[] p;
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed

        int selectedrow = jTableConnectTo.getSelectedRow();

        if (selectedrow >= 0) {

            Point selectPoint = p[selectedrow];
            Shape sh = DrawPanel.addShape.getShape()[DrawPanel.tempIndex];

            for (int i = 0; i < 8; i++) {
                if (sh.getPoint()[i].getNextPointLength() > 1) {
                    for (int j = 0; j < sh.getPoint()[i].getNextPointLength() - 1; j++) {
                        boolean match = selectPoint.equals(sh.getPoint()[i].getNextPoint()[j]);
                        if (match) {
                            for (int k = j; k < sh.getPoint()[i].getNextPointLength() - 1; k++) {
                                sh.getPoint()[i].getNextPoint()[k] = sh.getPoint()[i].getNextPoint()[k + 1];
                            }
                            sh.getPoint()[i].setNextPointLength(sh.getPoint()[i].getNextPointLength() - 1);
                            Shape s = selectPoint.getShape();
                            int indx = s.findPoint(selectPoint);
                            s.getPoint()[indx].deletePreConnection(sh.getPoint()[i]);
                        }
                    }
                }
            }
        }
        drawTable();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void drawTable() {
        DefaultTableModel model = (DefaultTableModel) this.jTableConnectTo.getModel();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        int pointLength = 1;
        p = new Point[pointLength];
        Shape sh = DrawPanel.addShape.getShape()[DrawPanel.tempIndex];
        for (int i = 0; i < 8; i++) {
            if (sh.getPoint()[i].getNextPointLength() > 1) {
                for (int j = 0; j < sh.getPoint()[i].getNextPointLength() - 1; j++) {
                    p[pointLength - 1] = sh.getPoint()[i].getNextPoint()[j];
                    Point temp[] = Arrays.copyOf(p, pointLength + 1);
                    p = temp;
                    pointLength++;
                }
            }
        }

        for (Point point : p) {
            if (point != null) {
                model.addRow(new Object[]{point.getShape().type(), point.getX(), point.getY()});
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Connection dialog = new Connection(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableConnectTo;
    // End of variables declaration//GEN-END:variables
}
